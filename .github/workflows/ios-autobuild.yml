name: iOS Auto Build and Deploy

on:
  push:
    paths:
      - "package.json" # Only trigger when package.json changes
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Clear npm cache and clean install
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json

      - name: Install dependencies with conflict resolution
        run: |
          npm install --legacy-peer-deps --force
          npm install ajv@^8.0.0 ajv-keywords@^5.0.0 --save --legacy-peer-deps

      - name: Verify ajv installation
        run: |
          node -e "console.log('ajv version:', require('ajv/package.json').version)"
          node -e "console.log('ajv-keywords version:', require('ajv-keywords/package.json').version)"

      - name: Get new version
        id: get_version
        run: |
          VERSION=$(jq -r .version package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "v${VERSION}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "exists=false" >> $GITHUB_ENV
          fi

      - name: Create tag
        if: env.exists == 'false'
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}
          git tag "v${VERSION}"
          git push origin "v${VERSION}"

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Authenticate with Expo
        run: eas whoami
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Run iOS build and submit
        run: |
          eas build --platform ios --profile production --non-interactive --auto-submit
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          APPLE_APP_ID: ${{ secrets.APPLE_APP_ID }}
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
